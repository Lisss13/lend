{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withTranslation } from \"../i18n\";\n\nvar Error = function Error(_ref) {\n  var statusCode = _ref.statusCode,\n      t = _ref.t;\n  return __jsx(\"p\", null, statusCode ? t(\"error-with-status\", {\n    statusCode: statusCode\n  }) : t(\"error-without-status\"));\n};\n\nError.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(_ref2) {\n    var res, err, destination, status, statusCode;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            res = _ref2.res, err = _ref2.err;\n            destination = \"/\";\n            status = 301;\n\n            if (res) {\n              res.writeHead(status || 302, {\n                Location: destination\n              });\n              res.end();\n            } else if (destination === \"/\") {\n              Router.push(destination);\n            } else {\n              window.location = destination;\n            }\n\n            statusCode = null;\n\n            if (res) {\n              ;\n              statusCode = res.statusCode;\n            } else if (err) {\n              ;\n              statusCode = err.statusCode;\n            }\n\n            return _context.abrupt(\"return\", {\n              namespacesRequired: [\"common\"],\n              statusCode: statusCode\n            });\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nError.defaultProps = {\n  statusCode: null\n};\nError.propTypes = {\n  statusCode: PropTypes.number,\n  t: PropTypes.func.isRequired\n};\nexport default withTranslation(\"common\")(Error);","map":{"version":3,"sources":["/Users/arseniymironov/project/landos/pages/_error.js"],"names":["React","PropTypes","withTranslation","Error","statusCode","t","getInitialProps","res","err","destination","status","writeHead","Location","end","Router","push","window","location","namespacesRequired","defaultProps","propTypes","number","func","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,eAAT,QAAgC,SAAhC;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ;AAAA,MAAGC,UAAH,QAAGA,UAAH;AAAA,MAAeC,CAAf,QAAeA,CAAf;AAAA,SACZ,iBACGD,UAAU,GACPC,CAAC,CAAC,mBAAD,EAAsB;AAAED,IAAAA,UAAU,EAAVA;AAAF,GAAtB,CADM,GAEPC,CAAC,CAAC,sBAAD,CAHP,CADY;AAAA,CAAd;;AAQAF,KAAK,CAACG,eAAN;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,YAAAA,GAAT,SAASA,GAAT,EAAcC,GAAd,SAAcA,GAAd;AAChBC,YAAAA,WADgB,GACF,GADE;AAEhBC,YAAAA,MAFgB,GAEP,GAFO;;AAGtB,gBAAIH,GAAJ,EAAS;AACPA,cAAAA,GAAG,CAACI,SAAJ,CAAcD,MAAM,IAAI,GAAxB,EAA6B;AAAEE,gBAAAA,QAAQ,EAAEH;AAAZ,eAA7B;AACAF,cAAAA,GAAG,CAACM,GAAJ;AACD,aAHD,MAGO,IAAIJ,WAAW,KAAK,GAApB,EAAyB;AAC9BK,cAAAA,MAAM,CAACC,IAAP,CAAYN,WAAZ;AACD,aAFM,MAEA;AACLO,cAAAA,MAAM,CAACC,QAAP,GAAkBR,WAAlB;AACD;;AAEGL,YAAAA,UAZkB,GAYL,IAZK;;AAatB,gBAAIG,GAAJ,EAAS;AACP;AAAIH,cAAAA,UADG,GACYG,GADZ,CACHH,UADG;AAER,aAFD,MAEO,IAAII,GAAJ,EAAS;AACd;AAAIJ,cAAAA,UADU,GACKI,GADL,CACVJ,UADU;AAEf;;AAjBqB,6CAkBf;AACLc,cAAAA,kBAAkB,EAAE,CAAC,QAAD,CADf;AAELd,cAAAA,UAAU,EAAVA;AAFK,aAlBe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA;;AAwBAD,KAAK,CAACgB,YAAN,GAAqB;AACnBf,EAAAA,UAAU,EAAE;AADO,CAArB;AAIAD,KAAK,CAACiB,SAAN,GAAkB;AAChBhB,EAAAA,UAAU,EAAEH,SAAS,CAACoB,MADN;AAEhBhB,EAAAA,CAAC,EAAEJ,SAAS,CAACqB,IAAV,CAAeC;AAFF,CAAlB;AAKA,eAAerB,eAAe,CAAC,QAAD,CAAf,CAA0BC,KAA1B,CAAf","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport { withTranslation } from \"../i18n\"\n\nconst Error = ({ statusCode, t }) => (\n  <p>\n    {statusCode\n      ? t(\"error-with-status\", { statusCode })\n      : t(\"error-without-status\")}\n  </p>\n)\n\nError.getInitialProps = async ({ res, err }) => {\n  const destination = \"/\"\n  const status = 301\n  if (res) {\n    res.writeHead(status || 302, { Location: destination })\n    res.end()\n  } else if (destination === \"/\") {\n    Router.push(destination)\n  } else {\n    window.location = destination\n  }\n\n  let statusCode = null\n  if (res) {\n    ;({ statusCode } = res)\n  } else if (err) {\n    ;({ statusCode } = err)\n  }\n  return {\n    namespacesRequired: [\"common\"],\n    statusCode,\n  }\n}\n\nError.defaultProps = {\n  statusCode: null,\n}\n\nError.propTypes = {\n  statusCode: PropTypes.number,\n  t: PropTypes.func.isRequired,\n}\n\nexport default withTranslation(\"common\")(Error)\n"]},"metadata":{},"sourceType":"module"}